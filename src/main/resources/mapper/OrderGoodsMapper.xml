<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mezereon.springtest.dao.OrderGoodsMapper">
    <resultMap id="BaseResultMap" type="com.mezereon.springtest.bean.OrderGoods">
        <id column="og_id" jdbcType="INTEGER" property="ogId"/>

        <result column="og_price" jdbcType="DOUBLE" property="ogPrice"/>
        <result column="og_quantity" jdbcType="INTEGER" property="ogQuantity"/>
        <association property="order" column="og_order_id"
                     javaType="com.mezereon.springtest.bean.Order"
                     select="com.mezereon.springtest.dao.OrderMapper.selectByPrimaryKey">

        </association>
        <association property="goods" column="og_goods_id"
                     javaType="com.mezereon.springtest.bean.Goods"
                     select="com.mezereon.springtest.dao.GoodsMapper.selectByPrimaryKey">

        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    og_id, og_order_id, og_goods_id, og_price, og_quantity, og_status
  </sql>
    <select id="selectByExample" parameterType="com.mezereon.springtest.bean.OrderGoodsExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from `order-goods`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `order-goods`
        where og_id = #{ogId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `order-goods`
    where og_id = #{ogId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.mezereon.springtest.bean.OrderGoodsExample">
        delete from `order-goods`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.mezereon.springtest.bean.OrderGoods">
    insert into `order-goods` (og_id, og_order_id, og_goods_id,
      og_price, og_quantity, og_status
      )
    values (#{ogId,jdbcType=INTEGER}, #{order.oId,jdbcType=INTEGER}, #{goods.gId,jdbcType=INTEGER},
      #{ogPrice,jdbcType=DOUBLE}, #{ogQuantity,jdbcType=INTEGER}, #{ogStatus,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.mezereon.springtest.bean.OrderGoods">
        insert into `order-goods`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ogId != null">
                og_id,
            </if>
            <if test="ogOrderId != null">
                og_order_id,
            </if>
            <if test="ogGoodsId != null">
                og_goods_id,
            </if>
            <if test="ogPrice != null">
                og_price,
            </if>
            <if test="ogQuantity != null">
                og_quantity,
            </if>
            <if test="ogStatus != null">
                og_status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ogId != null">
                #{ogId,jdbcType=INTEGER},
            </if>
            <if test="ogOrderId != null">
                #{order.oId,jdbcType=INTEGER},
            </if>
            <if test="ogGoodsId != null">
                #{goods.gId,jdbcType=INTEGER},
            </if>
            <if test="ogPrice != null">
                #{ogPrice,jdbcType=DOUBLE},
            </if>
            <if test="ogQuantity != null">
                #{ogQuantity,jdbcType=INTEGER},
            </if>
            <if test="ogStatus != null">
                #{ogStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mezereon.springtest.bean.OrderGoodsExample" resultType="java.lang.Long">
        select count(*) from `order-goods`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update `order-goods`
        <set>
            <if test="record.ogId != null">
                og_id = #{record.ogId,jdbcType=INTEGER},
            </if>
            <if test="record.ogOrderId != null">
                og_order_id = #{record.order.oId,jdbcType=INTEGER},
            </if>
            <if test="record.ogGoodsId != null">
                og_goods_id = #{record.goods.gId,jdbcType=INTEGER},
            </if>
            <if test="record.ogPrice != null">
                og_price = #{record.ogPrice,jdbcType=DOUBLE},
            </if>
            <if test="record.ogQuantity != null">
                og_quantity = #{record.ogQuantity,jdbcType=INTEGER},
            </if>
            <if test="record.ogStatus != null">
                og_status = #{record.ogStatus,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update `order-goods`
        set og_id = #{record.ogId,jdbcType=INTEGER},
        og_order_id = #{record.order.oId,jdbcType=INTEGER},
        og_goods_id = #{record.goods.gId,jdbcType=INTEGER},
        og_price = #{record.ogPrice,jdbcType=DOUBLE},
        og_quantity = #{record.ogQuantity,jdbcType=INTEGER},
        og_status = #{record.ogStatus,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.mezereon.springtest.bean.OrderGoods">
        update `order-goods`
        <set>
            <if test="ogOrderId != null">
                og_order_id = #{order.oId,jdbcType=INTEGER},
            </if>
            <if test="ogGoodsId != null">
                og_goods_id = #{goods.gId,jdbcType=INTEGER},
            </if>
            <if test="ogPrice != null">
                og_price = #{ogPrice,jdbcType=DOUBLE},
            </if>
            <if test="ogQuantity != null">
                og_quantity = #{ogQuantity,jdbcType=INTEGER},
            </if>
            <if test="ogStatus != null">
                og_status = #{ogStatus,jdbcType=INTEGER},
            </if>
        </set>
        where og_id = #{ogId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mezereon.springtest.bean.OrderGoods">
    update `order-goods`
    set og_order_id = #{order.oId,jdbcType=INTEGER},
      og_goods_id = #{goods.gId,jdbcType=INTEGER},
      og_price = #{ogPrice,jdbcType=DOUBLE},
      og_quantity = #{ogQuantity,jdbcType=INTEGER},
      og_status = #{ogStatus,jdbcType=INTEGER}
    where og_id = #{ogId,jdbcType=INTEGER}
  </update>
    <select id="selectByOrderId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `order-goods`
        where og_order_id = #{oId,jdbcType=INTEGER}
    </select>
    <select id="selectByGoodsId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `order-goods`
        where og_goods_id = #{gId,jdbcType=INTEGER}
    </select>
</mapper>