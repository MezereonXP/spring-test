<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mezereon.springtest.dao.TeamShopGoodsMapper">
    <resultMap id="BaseResultMap" type="com.mezereon.springtest.bean.TeamShopGoods">
        <id column="tg_id" jdbcType="INTEGER" property="tgId"/>
        <result column="tg_discount" jdbcType="DOUBLE" property="tgDiscount"/>
        <result column="tg_date" jdbcType="VARCHAR" property="tgDate"/>
        <result column="tg_quantity" jdbcType="INTEGER" property="tgQuantity"/>
        <result column="tg_maxpeople" jdbcType="INTEGER" property="tgMaxpeople"/>
        <association property="goods" javaType="com.mezereon.springtest.bean.Goods"
                     select="com.mezereon.springtest.dao.GoodsMapper.selectByPrimaryKey"
                     column="tg_goods_id"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        tg_id, tg_goods_id, tg_discount, tg_date, tg_quantity, tg_maxpeople
    </sql>
    <select id="selectByExample" parameterType="com.mezereon.springtest.bean.TeamShopGoodsExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from teamshop_goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from teamshop_goods
        where tg_id = #{tgId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from teamshop_goods
        where tg_id = #{tgId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.mezereon.springtest.bean.TeamShopGoodsExample">
        delete from teamshop_goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.mezereon.springtest.bean.TeamShopGoods">
        insert into teamshop_goods (tg_id, tg_goods_id, tg_discount,
        tg_date, tg_quantity, tg_maxpeople
        )
        values (#{tgId,jdbcType=INTEGER}, #{goods.gId,jdbcType=INTEGER}, #{tgDiscount,jdbcType=DOUBLE},
        #{tgDate,jdbcType=VARCHAR}, #{tgQuantity,jdbcType=INTEGER}, #{tgMaxpeople,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.mezereon.springtest.bean.TeamShopGoods">
        insert into teamshop_goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tgId != null">
                tg_id,
            </if>
            <if test="tgGoodsId != null">
                tg_goods_id,
            </if>
            <if test="tgDiscount != null">
                tg_discount,
            </if>
            <if test="tgDate != null">
                tg_date,
            </if>
            <if test="tgQuantity != null">
                tg_quantity,
            </if>
            <if test="tgMaxpeople != null">
                tg_maxpeople,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tgId != null">
                #{tgId,jdbcType=INTEGER},
            </if>
            <if test="tgGoodsId != null">
                #{goods.gId,jdbcType=INTEGER},
            </if>
            <if test="tgDiscount != null">
                #{tgDiscount,jdbcType=DOUBLE},
            </if>
            <if test="tgDate != null">
                #{tgDate,jdbcType=VARCHAR},
            </if>
            <if test="tgQuantity != null">
                #{tgQuantity,jdbcType=INTEGER},
            </if>
            <if test="tgMaxpeople != null">
                #{tgMaxpeople,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.mezereon.springtest.bean.TeamShopGoodsExample"
            resultType="java.lang.Long">
        select count(*) from teamshop_goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update teamshop_goods
        <set>
            <if test="record.tgId != null">
                tg_id = #{record.tgId,jdbcType=INTEGER},
            </if>
            <if test="record.tgGoodsId != null">
                tg_goods_id = #{record.goods.gId,jdbcType=INTEGER},
            </if>
            <if test="record.tgDiscount != null">
                tg_discount = #{record.tgDiscount,jdbcType=DOUBLE},
            </if>
            <if test="record.tgDate != null">
                tg_date = #{record.tgDate,jdbcType=VARCHAR},
            </if>
            <if test="record.tgQuantity != null">
                tg_quantity = #{record.tgQuantity,jdbcType=INTEGER},
            </if>
            <if test="record.tgMaxpeople != null">
                tg_maxpeople = #{record.tgMaxpeople,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update teamshop_goods
        set tg_id = #{record.tgId,jdbcType=INTEGER},
        tg_goods_id = #{record.goods.gId,jdbcType=INTEGER},
        tg_discount = #{record.tgDiscount,jdbcType=DOUBLE},
        tg_date = #{record.tgDate,jdbcType=VARCHAR},
        tg_quantity = #{record.tgQuantity,jdbcType=INTEGER},
        tg_maxpeople = #{record.tgMaxpeople,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.mezereon.springtest.bean.TeamShopGoods">
        update teamshop_goods
        <set>
            <if test="tgGoodsId != null">
                tg_goods_id = #{goods.gId,jdbcType=INTEGER},
            </if>
            <if test="tgDiscount != null">
                tg_discount = #{tgDiscount,jdbcType=DOUBLE},
            </if>
            <if test="tgDate != null">
                tg_date = #{tgDate,jdbcType=VARCHAR},
            </if>
            <if test="tgQuantity != null">
                tg_quantity = #{tgQuantity,jdbcType=INTEGER},
            </if>
            <if test="tgMaxpeople != null">
                tg_maxpeople = #{tgMaxpeople,jdbcType=INTEGER},
            </if>
        </set>
        where tg_id = #{tgId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mezereon.springtest.bean.TeamShopGoods">
        update teamshop_goods
        set tg_goods_id = #{goods.gId,jdbcType=INTEGER},
        tg_discount = #{tgDiscount,jdbcType=DOUBLE},
        tg_date = #{tgDate,jdbcType=VARCHAR},
        tg_quantity = #{tgQuantity,jdbcType=INTEGER},
        tg_maxpeople = #{tgMaxpeople,jdbcType=INTEGER}
        where tg_id = #{tgId,jdbcType=INTEGER}
    </update>
    <!-- 查询所有团购商品 -->
    <select id="selectAllTSG" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM `teamshop_goods`
    </select>
    <!-- 查询该团购商品的所有团的数量 -->
    <select id="selectNofTeam" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*)
        from team
        where t_teamshop_goods_id = #{tgId,jdbcType=INTEGER}
    </select>
</mapper>